use crate::utils;
use colored::*;
use std::fs;

pub fn handle(name: String) -> Result<(), String> {
    let migrations_dir = utils::get_migrations_dir_path()?;
    let timestamp = utils::get_current_timestamp();

    let migration_path = format!("{}/{}_{}", migrations_dir, timestamp, name);

    fs::create_dir_all(&migration_path)
        .map_err(|e| format!("Failed to generate migration file: {}", e))?;

    fs::write(
        format!("{}/up.sql", migration_path),
        format!("-- This is a migration generated by tern."),
    )
    .map_err(|e| format!("Failed to generate migration file: {}", e))?;

    fs::write(
        format!("{}/down.sql", migration_path),
        format!("-- This is a migration generated by tern.\n-- Write sql like, drop table, index, type, etc. that you created in up.sql\n-- This down.sql is mainly undo the changes done in up.sql"),
    )
    .map_err(|e| format!("Failed to generate migration file: {}", e))?;

    println!(
        "{} {}",
        "âœ… Migration file successfully generated at:"
            .green()
            .bold(),
        migration_path.to_string().cyan().underline()
    );

    Ok(())
}
